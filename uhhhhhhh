function missing(t, f, fallback)
	if type(f) == t then return f end
	return fallback
end

cloneref = missing("function", cloneref, function(...) return ... end)

Services = setmetatable({}, {
	__index = function(self, name)
		local success, cache = pcall(function()
			return cloneref(game:GetService(name))
		end)
		if success then
			rawset(self, name, cache)
			return cache
		else
			error("Invalid Roblox Service: " .. tostring(name))
		end
	end
})

local Players = Services.Players
local LocalPlayer = Players.LocalPlayer
local VirtualInputManager = Services.VirtualInputManager

--/// MAIN USER --\\\
local MAINUSER = "treeblunt"
local MAINUSERID = game.Players:GetUserIdFromNameAsync(MAINUSER)
local GAMEID = 4588604953

local GROUPIDS = {
	4165692,
	32406137,
	33841012,
}

local ALTUSERS = {
	"clippedaim",
	--"cleanaim",
	--"AltThree",
	--"AltFour"
}

--/// ROLE CHECK SYSTEM --\\\
Players.PlayerAdded:Connect(function(player)
	for _, groupId in ipairs(GROUPIDS) do
		if player:IsInGroup(groupId) then
			local role = player:GetRoleInGroup(groupId)
			if role ~= "Guest" and role ~= "Member" and role ~= "Everyone" and role ~= "Fan" then
				LocalPlayer:Kick(
					"\nRolewatch Triggered\n" ..
						"Player \"" .. player.Name .. "\" joined with restricted role \"" .. role ..
						"\" in group " .. groupId .. "."
				)
				break
			end
		end
	end
end)

--/// DETERMINE IF ALT OR MAIN --\\\
local isAlt = false
local altIndex = nil
for i, altName in ipairs(ALTUSERS) do
	if string.lower(LocalPlayer.Name) == string.lower(altName) then
		isAlt = true
		altIndex = i
		break
	end
end

--/// ALT FUNCTIONS ONLY --\\\
if isAlt then
	-- Auto-equip function
	local function autoEquipFirstTool()
		task.wait(1)
		local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
		local backpack = LocalPlayer:WaitForChild("Backpack")

		local firstTool = nil
		for _, v in ipairs(backpack:GetChildren()) do
			if v:IsA("Tool") or v:IsA("HopperBin") then
				firstTool = v
				break
			end
		end

		if firstTool then
			firstTool.Parent = character
		end
	end

	-- Equip once on load
	task.defer(autoEquipFirstTool)

	-- Equip again on respawn
	LocalPlayer.CharacterAdded:Connect(function()
		autoEquipFirstTool()
	end)

	-- Teleport Toggle UI
	local teleportEnabled = false
	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "TeleportToggleUI"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = game:GetService("CoreGui")

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 150, 0, 40)
	button.Position = UDim2.new(0.5, -75, 0.85, 0)
	button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.Text = "Start Teleport"
	button.Font = Enum.Font.GothamBold
	button.TextSize = 18
	button.Parent = screenGui
	button.Active = true
	button.Draggable = true

	button.MouseButton1Click:Connect(function()
		teleportEnabled = not teleportEnabled
		if teleportEnabled then
			button.Text = "Stop Teleport"
			button.BackgroundColor3 = Color3.fromRGB(60, 160, 60)
		else
			button.Text = "Start Teleport"
			button.BackgroundColor3 = Color3.fromRGB(160, 60, 60)
		end
	end)

	task.spawn(function()
		while task.wait(0.2) do
			if teleportEnabled then
				local mainPlayer = Players:FindFirstChild(MAINUSER)
				local altCharacter = LocalPlayer.Character
				if mainPlayer and mainPlayer.Character and altCharacter and altIndex then
					local mainRoot = mainPlayer.Character:FindFirstChild("HumanoidRootPart")
					local altRoot = altCharacter:FindFirstChild("HumanoidRootPart")
					if mainRoot and altRoot then
local offset
if altIndex == 1 then
	-- First alt: 2.5 studs forward, 0.5 up
	offset = Vector3.new(0, 0.5, -2.5)
else
	-- Others: 90째, 180째, 270째 positions around the main user
	local radius = 5
	local angle = math.rad((altIndex - 2) * 90) -- start second alt at 90째
	offset = Vector3.new(math.sin(angle) * radius, 0.5, math.cos(angle) * radius)
end
altRoot.CFrame = mainRoot.CFrame * CFrame.new(offset)
					end
				end
			end
		end
	end)

	-- Respawn Loop
	task.spawn(function()
		while true do
			task.wait(1)
			local character = LocalPlayer.Character
			local humanoid = character and character:FindFirstChildOfClass("Humanoid")
			if not character or not humanoid or humanoid.Health <= 0 then
				LocalPlayer:LoadCharacter()
			end
		end
	end)

	-- Press 'E' every 2 seconds
	task.spawn(function()
		while true do
			task.wait(2)
			pcall(function()
				VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
				task.wait(0.1)
				VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
			end)
		end
	end)
end

if string.lower(LocalPlayer.Name) == string.lower(MAINUSER) then
	local facingRotation = 0
	local VirtualInputManager = Services.VirtualInputManager

	task.defer(function()
		LocalPlayer.CharacterAdded:Wait()
		task.wait(1)

		local backpack = LocalPlayer:WaitForChild("Backpack")
		local tools = {}
		for _, v in ipairs(backpack:GetChildren()) do
			if v:IsA("Tool") then
				table.insert(tools, v)
			end
		end

		if #tools >= 2 then
			local secondTool = tools[2]
			secondTool.Parent = LocalPlayer.Character
		end

		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "FarmingToggleUI"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = game:GetService("CoreGUI")

		local button = Instance.new("TextButton")
		button.Size = UDim2.new(0, 150, 0, 40)
		button.Position = UDim2.new(0.5, -75, 0.85, 0)
		button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.Text = "Start Farming"
		button.Font = Enum.Font.GothamBold
		button.TextSize = 18
		button.Parent = screenGui
		button.Active = true
		button.Draggable = true

		local farmingEnabled = false

		button.MouseButton1Click:Connect(function()
			farmingEnabled = not farmingEnabled
			if farmingEnabled then
				button.Text = "Stop Farming"
				button.BackgroundColor3 = Color3.fromRGB(60, 160, 60)
			else
				button.Text = "Start Farming"
				button.BackgroundColor3 = Color3.fromRGB(160, 60, 60)
			end
		end)

		local UserInputService = game:GetService("UserInputService")

		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if gameProcessed or not farmingEnabled then return end

			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				local altCount = 0
				for _, player in ipairs(game.Players:GetPlayers()) do
					for _, altName in ipairs(ALTUSERS) do
						if string.lower(player.Name) == string.lower(altName) then
							altCount += 1
							break
						end
					end
				end

				local rotationStep
				if altCount <= 0 then
					rotationStep = 90
				else
					rotationStep = 360 / (altCount + 1)
				end

				local char = LocalPlayer.Character
				local root = char and char:FindFirstChild("HumanoidRootPart")
				if root then
					facingRotation = facingRotation + rotationStep
					if facingRotation >= 360 then
						facingRotation = 0
					end
					root.CFrame = CFrame.new(root.Position) * CFrame.Angles(0, math.rad(facingRotation), 0)
				end
			end
		end)
	end)

	-- Auto Clicker UI
	task.defer(function()
		local ScreenGui = Instance.new("ScreenGui")
		local ClickButton = Instance.new("TextButton")

		ScreenGui.Name = "AutoClickerUI"
		ScreenGui.ResetOnSpawn = false
		ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

		ClickButton.Size = UDim2.new(0, 200, 0, 50)
		ClickButton.Position = UDim2.new(0.5, -100, 0.9, 0)
		ClickButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		ClickButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		ClickButton.Font = Enum.Font.GothamBold
		ClickButton.TextSize = 20
		ClickButton.Text = "Start Auto Clicker"
		ClickButton.Parent = ScreenGui

		local UIScale = Instance.new("UIScale", ClickButton)
		UIScale.Scale = 1

		local UICorner = Instance.new("UICorner", ClickButton)
		UICorner.CornerRadius = UDim.new(0, 10)

		local AutoClickEnabled = false
		local virtualUser = game:GetService("VirtualUser")

		local function performClick()
			local mouse = LocalPlayer:GetMouse()
			virtualUser:ClickButton1(Vector2.new(mouse.X, mouse.Y))
		end

		ClickButton.MouseButton1Click:Connect(function()
			AutoClickEnabled = not AutoClickEnabled
			ClickButton.Text = AutoClickEnabled and "Stop Auto Clicker" or "Start Auto Clicker"
			ClickButton.BackgroundColor3 = AutoClickEnabled and Color3.fromRGB(0, 170, 85) or Color3.fromRGB(35, 35, 35)

			if AutoClickEnabled then
				task.spawn(function()
					while AutoClickEnabled do
						performClick()
						task.wait(3.2)
					end
				end)
			end
		end)
	end)

	if string.lower(LocalPlayer.Name) == string.lower(MAINUSER) then
		task.spawn(function()
			local playerGui = LocalPlayer:WaitForChild("PlayerGui")

			-- GUI
			local sideGui = Instance.new("ScreenGui")
			sideGui.Name = "PlayerStatsUI"
			sideGui.ResetOnSpawn = false
			sideGui.Parent = playerGui

			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(0, 250, 0, 180)
			frame.Position = UDim2.new(1, -260, 0.3, 0)
			frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			frame.BorderSizePixel = 0
			frame.Parent = sideGui

			local UICorner = Instance.new("UICorner", frame)
			UICorner.CornerRadius = UDim.new(0, 12)

			local function createStatLabel(text, posY)
				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, -20, 0, 25)
				label.Position = UDim2.new(0, 10, 0, posY)
				label.BackgroundTransparency = 1
				label.TextColor3 = Color3.fromRGB(200, 200, 200)
				label.Font = Enum.Font.Gotham
				label.TextSize = 16
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.Text = text
				label.Parent = frame
				return label
			end

			local levelStat = createStatLabel("Level: 0 (+0)", 50)
			local xpStat = createStatLabel("XP: 0 / 0 (+0, 0%)", 80)
			local moneyStat = createStatLabel("Money: $0", 110)
			local totalStat = createStatLabel("Total: $0", 140)

			local coreGuiFrame = playerGui:WaitForChild("CoreGUI"):WaitForChild("StatsFrame")
			local bankCashContainer = coreGuiFrame:WaitForChild("Frame2"):WaitForChild("Frame"):WaitForChild("Container")
			local bankLabel = bankCashContainer:WaitForChild("Bank"):WaitForChild("Amt")
			local cashLabel = bankCashContainer:WaitForChild("Cash"):WaitForChild("Amt")

			local startingCash, startingBank, startingLevel, startingXP = 0, 0, 0, 0
			local initialized = false

			while task.wait(0.5) do
				pcall(function()
					local leaderstats = LocalPlayer:FindFirstChild("leaderstats")
					local level = leaderstats and leaderstats:FindFirstChild("Level") and leaderstats.Level.Value or 0

					local xpLabel = playerGui.CoreGUI.LevelFrame.Bar:FindFirstChild("Stat")
					local currentXP, maxXP = 0, 0
					if xpLabel then
						local txt = xpLabel.Text:gsub(",", "")
						local c, m = txt:match("(%d+)%s*/%s*(%d+)")
						currentXP, maxXP = tonumber(c) or 0, tonumber(m) or 0
					end

					local cash = tonumber(cashLabel.Text:gsub("[%$,]", "")) or 0
					local bank = tonumber(bankLabel.Text:gsub("[%$,]", "")) or 0
					local total = cash + bank

					if not initialized and (level ~= 0 or cash ~= 0 or bank ~= 0 or currentXP ~= 0) then
						startingCash = cash
						startingBank = bank
						startingLevel = level
						startingXP = currentXP
						initialized = true
					end

					if initialized then
						local cashGain = cash - startingCash
						local bankGain = bank - startingBank
						local totalGain = total - (startingCash + startingBank)
						local levelGain = level - startingLevel
						local xpGain = currentXP - startingXP
						local xpPercent = (maxXP > 0) and math.floor((currentXP / maxXP) * 100) or 0

						levelStat.Text = string.format("Level: %d (+%d)", level, levelGain)
						xpStat.Text = string.format("XP: %d / %d (+%d, %d%%)", currentXP, maxXP, xpGain, xpPercent)
						moneyStat.Text = string.format("Money: $%s (+%s)", tostring(cash), tostring(cashGain))
						totalStat.Text = string.format("Total: $%s (+%s)", tostring(total), tostring(totalGain))
					end
				end)
			end
		end)
	end
end
